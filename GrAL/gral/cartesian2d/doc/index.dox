/*! \mainpage Index of the GrAL Cartesian2D Grid Module

   This module contains the concrete grid component RegGrid2D.
   An object of type RegGrid2D represents a finite Cartesian grid.
   Hence, there is no explicit incidence information stored, all
   iterator functionality is implemented via index calculations.

   
   The main classes one might use are:
   (headers under the path Gral/Grids/Cartesian2D)
   -  RegGrid2D (cartesian-grid2d.h): The combinatorial grid
   -  stored_geometry_reg2d (stored-geometry.h):
       A simple grid geometry with stored vertex coordinates
   -  mapped_geometry_reg2d (mapped-geometry.h): 
        A grid geometry using a mapping from a default embedding in \f$ [0,1]^2 \f$
   - total grid function (see $GrAL TotalGridFunction concept, grid-functions.h)
   - partial grid functions 
     (see $GrAL PartialGridFunction concept, partial-grid-functions.h )
   - BoundaryRange<RegGrid2D> (boundary.h) for boundary iteration
   - all.h for all of the above.

   \status 
   - The classes contained in this module are rather stable.
     RegGrid2D contains a lot of functions specific to Cartesian grids.
     These are not so 'standardized' as the general purpose grid kernel,
     and hence might change if concepts get more elaborate in this context.
   - Documentation needs to be added for some classes and many member functions.
     The major part of functionality conforms to the grid kernel concepts
     and should be usable without much further explanation.
   - There are some bugs in the documentation generated by doxygen.
   - The test/ directory needs work.
   - There is no demo/ directory
   - Possible extensions are:
      - Parameterize a Cartesian grid by the index mapping
        used ( \f$ I: [0, n-1] \times [0, m-1] \mapsto [0, nm-1] \f$).

   \see $gral-gral/cartesian3d GrAL-Cartesian3D module
*/