# -*- makefile -*-

##############################################
#
# This file contains common some targets used 
# in package makefiles.
#
##############################################

# some aliases for standard targets
distclean: realclean
clobber:   realclean

# build test programs
test:

# perform checks with test programs
check:

# new: libclean

#####################################################################
# This is the central place of specifying which files to clean
# As every C++ compiler leaves different stuff behind when dealing
# with templates, it is wise to concentrate this information.
#####################################################################

stdclean: moduleclean
	@rm -f *~ *.o  *.d *.ti *.ii
	@find . -name "*~" -exec rm {} \; -print
	@rm -rf ti_files # KCC template DB
	@rm -rf *.tmp
	@rm -f doxy.log 

clean: stdclean

libclean:
	rm -rf lib/$(LIBPATH)/*.a

############################
##  Installation targets ###
############################

install-libs:
	mkdir -p $(PREFIX)/lib/$(LIBPATH)
	cp $(ROOT)/lib/$(LIBPATH)/lib*  $(PREFIX)/lib/$(LIBPATH)  || echo "No libs found."

install: install-headers 

########################################################
#
# Targets to generate documentation using doxygen.   
#
# Documentation generation (doc:) is broken into
# predoc: and postdoc: phases.
# predoc: does generate the documentation, and
# postdoc: does perform some replacement of paths and
# links.
# By default, only doxygen documentation is generated.
# Packages can add more by adding dependencies to
#  additional-predoc: and additional-postdoc: targets.
#########################################################


predoc:  doxy additional-predoc
postdoc: installdox additional-postdoc
doc: predoc postdoc
copydoc: copy-doxy additional-copydoc


# hooks for module-specific additional docs
additional-predoc:
additional-postdoc:
additional-copydoc:
additional-doc: additional-predoc additional-postdoc

# doxygen specific targets

DOXYGEN=$(shell which doxygen)
DOCROOT=$(ALLROOT)
DOXYPATH=doxygen/html
DOXYCFG=$(CONFIGURATION)/doxycfg/
DOXYHEADER=$(DOXYCFG)/header.html
DOXYFOOTER=$(DOXYCFG)/footer.html
RELPATH=../../..#
ADDRELPATH=.#
RELROOT=$(RELPATH)/$(ADDRELPATH)#

CONCEPTPATH=gral/base/doc/hyperlatex/html#
GRALCONCEPTS=$(RELROOT)/$(CONCEPTPATH)#

# hooks to define in modules if necessary (e.g. recursive doxy)
additional-doxy:
additional-installdox:

doxy: additional-doxy
	$(DOXYCFG)/filter-doxy-cfg.pl  -root $(ALLROOT) -binpath $(LOCALBINPATH) \
        $(DOXYCFG)/doxy.paths.cfg                  > doxy.cfg.tmp
	echo "@INCLUDE_PATH = $(DOXYCFG)"         >> doxy.cfg.tmp
	cat doxy.local.cfg                        >> doxy.cfg.tmp
	$(DOXYCFG)/generate-doxycfg.pl -root $(ALLROOT)  dependencies >> doxy.cfg.tmp
	cp $(DOXYHEADER) .
	cp $(DOXYFOOTER) .
	mkdir -p doxygen
	(TEXINPUTS=$(TEXINPUTS):$(ROOT):$(CONFIGURATION)/tex; export TEXINPUTS; \
         $(DOXYGEN) doxy.cfg.tmp;)
	rm -f footer.html header.html
	rm -f doxy.cfg.tmp 

installdox: additional-installdox
	$(DOXYCFG)/generate-installdox.pl -root $(RELROOT) -path $(DOXYPATH)\
          dependencies > installdox.sh.tmp;
	chmod ugo+x ./installdox.sh.tmp;
	./installdox.sh.tmp
	rm -f installdox.sh.tmp
	$(DOXYCFG)/install-doc.pl\
            -root $(RELROOT) \
            -path $(DOXYPATH) \
            -stl $(STLURL) \
            -gralconcepts $(GRALCONCEPTS) \
          $(DOXYPATH)/*.html

DOCDEST=/dev/null
copy-doxy: 
	mkdir -p $(DOCDEST)/$(DOXYPATH)
	cp -r $(DOXYPATH)/* $(DOCDEST)/$(DOXYPATH)

###########################
##      Checks           ##
###########################

check: module-check

# hook for modules
module-check:

test-new-check-clean:
	(cd test; $(MAKE) new-check-clean)

###########################
##  Standard suffix rule ##
###########################

.PHONY: doc test demo

.SUFFIXES: .C .cc .d .f

.C.o: 
	$(CC) $(CCFLAGS) $(IFLAGS) -c $<

.cc.o: 
	$(CC) $(CCFLAGS) $(IFLAGS) -c $<

.C.d:
	$(DEPEND) $(DEPFLAGS) $(IFLAGS) $<  > $@
