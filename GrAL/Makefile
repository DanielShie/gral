
GRALROOT = $(shell pwd)
SUBDIRS = configuration utilities external-control sequence geometry \
         graphics-device function-algebra gral

SUBDIRS := $(filter-out $(EXCLUDED),$(SUBDIRS))

TARGET=new

first: all

# init - no recursion
init:
	@set -e; \
        (for i in $(SUBDIRS); \
         do \
         echo "# GENERATED by make init - DO NOT EDIT OR CHECK IN" >  $$i/local.config;\
         echo "export GRALROOT = $(GRALROOT)#"    >> $$i/local.config; \
         echo "include $(GRALROOT)/$$i/mk.config" >> $$i/local.config; \
         done;\
         cd gral; $(MAKE) init; cd ..;)

all: init
	@set -e; \
        (for i in $(SUBDIRS); \
        do cd $(GRALROOT)/$$i;echo 'ENTERING directory' $$i;\
        $(MAKE) all GRALROOT=$(GRALROOT) CONFIG=$(GRALROOT)/$$i/local.config;\
        echo "LEAVING  directory" $$i;cd ..; done)

clean: init
	@set -e; \
        (for i in $(SUBDIRS); \
        do cd $(GRALROOT)/$$i;echo 'ENTERING directory' $$i;\
        $(MAKE) clean GRALROOT=$(GRALROOT) CONFIG=$(GRALROOT)/$$i/local.config;\
        echo "LEAVING  directory" $$i;cd ..; done)
	rm -f *.o *~ *.flc core;

libclean: init
	@set -e; \
        (for i in $(SUBDIRS); \
        do cd $(GRALROOT)/$$i;echo 'ENTERING directory' $$i;\
        $(MAKE) libclean GRALROOT=$(GRALROOT) CONFIG=$(GRALROOT)/$$i/local.config;\
        echo "LEAVING  directory" $$i;cd ..; done)
	rm -f *.o *~ *.flc core;


realclean: init
	@set -e; \
        (for i in $(SUBDIRS); \
        do cd $(GRALROOT)/$$i;echo 'ENTERING directory' $$i;\
        $(MAKE) realclean GRALROOT=$(GRALROOT) CONFIG=$(GRALROOT)/$$i/local.config;\
        echo "LEAVING  directory" $$i;cd ..; done)
	rm -f *.o *~ *.flc core;


new: init
	@set -e; \
        (for i in $(SUBDIRS); \
        do cd $(GRALROOT)/$$i;echo 'ENTERING directory' $$i;\
        $(MAKE) new GRALROOT=$(GRALROOT) CONFIG=$(GRALROOT)/$$i/local.config;\
        echo "LEAVING  directory" $$i;cd ..; done)

new-force: init
	@set -e; \
        (for i in $(SUBDIRS); \
        do cd $(GRALROOT)/$$i;echo 'ENTERING directory' $$i;\
        $(MAKE) new GRALROOT=$(GRALROOT) CONFIG=$(GRALROOT)/$$i/local.config \
        || echo ">>>>>>>>>>> TARGET new-force FAILED for " $$i " (continuing)";\
        echo "LEAVING  directory" $$i;cd ..; done)

install: init
	@set -e; \
        (for i in $(SUBDIRS); \
        do cd $(GRALROOT)/$$i;echo 'ENTERING directory' $$i;\
        $(MAKE) install GRALROOT=$(GRALROOT) CONFIG=$(GRALROOT)/$$i/local.config;\
        echo "LEAVING  directory" $$i;cd ..; done)


test: init
	@set -e; \
        (for i in $(SUBDIRS); \
        do cd $(GRALROOT)/$$i;echo 'ENTERING directory' $$i;\
        $(MAKE) test TARGET=$(TARGET) GRALROOT=$(GRALROOT) CONFIG=$(GRALROOT)/$$i/local.config;\
        echo "LEAVING  directory" $$i;cd ..; done)

test-force: init
	@set -e; \
        (for i in $(SUBDIRS); \
        do cd $(GRALROOT)/$$i;echo 'ENTERING directory' $$i;\
        $(MAKE) test TARGET=$(TARGET) GRALROOT=$(GRALROOT) CONFIG=$(GRALROOT)/$$i/local.config \
        || echo ">>>>>>>>>>> TARGET test-force FAILED for " $$i " (continuing)";\
        echo "LEAVING  directory" $$i;cd ..; done)

check: init
	@set -e; \
        (for i in $(SUBDIRS); \
        do cd $(GRALROOT)/$$i;echo 'ENTERING directory' $$i;\
        $(MAKE) check GRALROOT=$(GRALROOT) CONFIG=$(GRALROOT)/$$i/local.config;\
        echo "LEAVING  directory" $$i;cd ..; done)

check-force: init
	@set -e; \
        (for i in $(SUBDIRS); \
        do cd $(GRALROOT)/$$i;echo 'ENTERING directory' $$i;\
        $(MAKE) check GRALROOT=$(GRALROOT) CONFIG=$(GRALROOT)/$$i/local.config \
        || echo ">>>>>>>>>>> TARGET check-force FAILED for " $$i " (continuing)";\
        echo "LEAVING  directory" $$i;cd ..; done)

new-check-clean: new test-check-clean

test-check-clean: init
	@set -e; \
        (for i in $(SUBDIRS); \
        do cd $(GRALROOT)/$$i;echo 'ENTERING directory' $$i;\
        $(MAKE) test-check-clean GRALROOT=$(GRALROOT) CONFIG=$(GRALROOT)/$$i/local.config; \
        echo "LEAVING  directory" $$i;cd ..; done)

test-check-clean-force: init
	@set -e; \
        (for i in $(SUBDIRS); \
        do cd $(GRALROOT)/$$i;echo 'ENTERING directory' $$i;\
        $(MAKE) test-check-clean GRALROOT=$(GRALROOT) CONFIG=$(GRALROOT)/$$i/local.config \
        || echo ">>>>>>>>>>> TARGET test-check-clean-force FAILED for " $$i " (continuing)";\
        echo "LEAVING  directory" $$i;cd ..; done)



# predoc  = generate docs
# postdoc = install docs (replace dummy links)

doxy: init
	@set -e; \
        (for i in $(SUBDIRS); \
        do cd $(GRALROOT)/$$i;echo 'ENTERING directory' $$i;\
        $(MAKE) doxy GRALROOT=$(GRALROOT) CONFIG=$(GRALROOT)/$$i/local.config;\
        echo "LEAVING  directory" $$i;cd ..; done)

installdox: init
	@set -e; \
        (for i in $(SUBDIRS); \
        do cd $(GRALROOT)/$$i;echo 'ENTERING directory' $$i;\
        $(MAKE) installdox GRALROOT=$(GRALROOT) CONFIG=$(GRALROOT)/$$i/local.config;\
        echo "LEAVING  directory" $$i;cd ..; done)

doc: predoc postdoc

predoc:	init
	@set -e; \
        (for i in $(SUBDIRS); \
        do cd $(GRALROOT)/$$i;echo 'ENTERING directory' $$i;\
        $(MAKE) predoc GRALROOT=$(GRALROOT) CONFIG=$(GRALROOT)/$$i/local.config;\
        echo "LEAVING  directory" $$i;cd ..; done)

postdoc: init
	@set -e; \
        (for i in $(SUBDIRS); \
        do cd $(GRALROOT)/$$i;echo 'ENTERING directory' $$i;\
        $(MAKE) postdoc GRALROOT=$(GRALROOT) CONFIG=$(GRALROOT)/$$i/local.config;\
        echo "LEAVING  directory" $$i;cd ..; done)
